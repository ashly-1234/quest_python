DAY5 SATURDAY 03-08-2024

# Program to create 1D Array (List) and find biggest and smallest numbers in it.

n = int(input('Enter size of the Array: '))

array = []
print(f'Enter {n} numbers of the Array')
for i in range(n):
    array.append(int(input()))

print('Array = ', array)
small_num = array[0]
big_num = array[0]

for i in range(1, n):
    if array[i] < small_num:
        small_num = array[i]
    if array[i] > big_num:
        big_num = array[i]
print(f'Biggest number in Array is {big_num}')
print(f'Smallest number in Array is {small_num}')
--------------------------------------------------------
Read from the user the size of array, say N
declare a empty list, say array = []
Read N numbers from the user and store it in the array
Assume the 1st element of the Array as both SMALL and BIG
Now start comparing the SMALL and BIG values with remaining elements of the Array.
	When ever you find a smaller element than that is in SMALL, replace the SMALL with the smaller element you found.
	On Similar lines, find BIG
Print SMALL and BIG as O/P
--------------------------------------------
# Program to create 2D Array, that is, a Matrix(using List) and add it to another Matrix and print the sum Matrix.

rows = int(input('Enter number of rows of the Matrix: '))
columns = int(input('Enter number of columns of the Matrix: '))

matrix1 = []
for i in range(rows):
    print(f'Enter {columns} numbers of Row-{i+1}')
    row_numbers = [] # List that stores numbers of a specific row
    for j in range(columns): # To read numbers of a row
        row_numbers.append(int(input()))
    matrix1.append(row_numbers)

for row in matrix1:
    for number in row:
        print('%3s'%(number), end='')
    print()
-----------------------------------------------
# Program to create a 3D Array
'''
1st read elements of a row
add these rows into the Matrix
Now read such N matrices and add them all to the 3D Array
'''

matrices = int(input('Enter the number of Matrices in 3D array: '))
rows = int(input('Enter number of rows of each Matrix: '))
columns = int(input('Enter number of columns of each row: '))

array_3d = []
for i in range(matrices):
    matrix = []
    print(f'Enter elements of the Matrix-{i+1}')
    for j in range(rows):
        row = []
        for k in range(columns):
            row.append(int(input()))
        matrix.append(row)
    array_3d.append(matrix)

print(array_3d)
---------------------------------------------------------
Magic Mirror Problem:

Read original_string
Read rotated_string

Check if the rotated_string is rotated string of the original_string or not.

o_str = kerala
r_str = alaker

r_str = realak

original_str = input('Enter the original string: ')
rotated_str = input('Enter the rotated string: ')

temp_str = rotated_str * 2
if temp_str.find(original_str) != -1:
    print(f'{rotated_str} is rotated string of {original_str}')
else:
    print(f'{rotated_str} is Not rotated string of {original_str}')
-------------------------------------------------
Read N (the number of bills)
Read N numbers of the list (N bill amounts)
count_of_perfect_squares = 0
Now run a loop and access each element of the list
	check if element is PS:
		count_of_perfect_squares += 1
print count_of_perfect_squares
------------------------------------------------------
def apply_operation(func, x, y):
  return func(x, y)

def add(a, b):
  return a + b

def subtract(a, b):
  return a - b

result1 = apply_operation(add, 5, 3)  # Pass the 'add' function as an argument
print(result1)

result2 = apply_operation(subtract, 10, 4)  # Pass the 'subtract' function as an argument
print(result2)